#!/bin/bash
path=~/.radio
#path=~/programs/own/radio

get_url='select url from stations where name like "%'
get_url+="$1"
get_url+='%"'

get_url2='select url2 from stations where name like "%'
get_url2+="$2"
get_url2+='%"'

get_names='select name from stations where name like "%'
get_names+="$1"
get_names+='%"'

get_random='select url from stations order by random() limit 1'

get_random_for_tag='select url from stations where tags like "%'
get_random_for_tag+="$2"
get_random_for_tag+='%"'
get_random_for_tag+='order by random() limit 1'

get_random_for_loc='select url from stations where location like "%'
get_random_for_loc+="$2"
get_random_for_loc+='%"'
get_random_for_loc+='order by random() limit 1'

get_stations_for_loc='select name from stations where location like "%'
get_stations_for_loc+="$2"
get_stations_for_loc+='%"'

get_stations='select name from stations'

get_tag='select name from stations where tags like "%'
get_tag+="$2"
get_tag+='%"'

get_all_location='select distinct location from stations'

if [ -f ${path}/db.md5 ]; then
	md5date=$(date +%s -r ${path}/db.md5)
	today=$(date +%s)
	datediff=$(($today-$md5date))
	if [ $datediff -gt 86471 ]; then
		#file is older than 1 day
		echo "checking for new stations..."
		echo
		cd /tmp/
		wget -q https://raw.githubusercontent.com/todestoast/radio/master/db.md5
		if [ $(diff /tmp/db.md5 ${path}/db.md5 | wc -l) -gt 1 ]; then
			#different sum, download db
			echo "new stations found. downloading..."
			cd $path
			rm radio.db
			wget -q https://github.com/todestoast/radio/raw/master/radio.db
			echo "new stations added"
			mv /tmp/db.md5 ${path}/db.md5
		fi
	fi
else
	echo "Missing file. Downloading..."
	cd $path
	wget -q https://raw.githubusercontent.com/todestoast/radio/master/db.md5
	if [ ! -f ${path}/radio.db ]; then
		wget -q https://github.com/todestoast/radio/raw/master/radio.db
	fi
fi

if [ -z "$1" ]; then
	echo "see --help for usage"
	exit 1
fi

case $1 in
	random)
		url=$(${path}/sqlite3 ${path}/radio.db "$get_random")
	;;
	-la|--list-all)
		stations=$(${path}/sqlite3 ${path}/radio.db "$get_stations")
		echo "$stations"
		exit 0
	;;
	-l|--list)
		if [ -z "$2" ]; then
			echo "Pass a word you want to search for"
			exit 1;
		else
			if [[ "$3" == "random" ]]; then
				url=$(${path}/sqlite3 ${path}/radio.db "$get_random_for_tag")
			else
				tags=$(${path}/sqlite3 ${path}/radio.db "$get_tag")
				echo "$tags"
				exit 0
			fi
		fi
	;;
	-lr|--list-regions)
		location=$(${path}/sqlite3 ${path}/radio.db "$get_all_location")
		echo "$location"
		exit 0;
	;;
	-r|--region)
	if [ -z "$2" ]; then
		echo "Pass a region you want to search for"
		exit 1;
	fi
	if [[ "$3" == "random" ]]; then
		url=$(${path}/sqlite3 ${path}/radio.db "$get_random_for_loc")
	else
		stations=$(${path}/sqlite3 ${path}/radio.db "$get_stations_for_loc")
		echo "$stations"
		exit 0
	fi
	;;
	-b|--backup)
		url=$(${path}/sqlite3 ${path}/radio.db "$get_url2")
	;;
	-h|--help)
		echo "usage: radio <stationname>"
		echo "example: radio kexp"
		echo
		echo "-b --backup"
		echo "play backup stream (if exists). Might help if the primary streaming URL is not working"
		echo
		echo "-h --help"
		echo "displays this help menu"
		echo
		echo "-l --list <search>"
		echo "search radiostations for specific word. This doesn't search for a stationname but for a tag."
		echo "example: radio -l ambient"
		echo "use 'radio -l <search> random' to randomly play a station that matches the search"
		echo "example: radio -l ambient random"
		echo
		echo "-la --list-all"
		echo "list all station Names (Caution: There might be a lot!)"
		echo
		echo "-lr --list-regions"
		echo "list all regions for radio stations"
		echo
		echo "-r --region"
		echo "list all radio stations for specific region"
		echo "example: radio -r beirut"
		echo "use 'radio -r <search> random' to randomly play a station for that region"
		echo "example: radio -r seattle random"
		exit 0
		;;
esac

if [ ${#url}  -eq 0 ]; then
 url=$(${path}/sqlite3 ${path}/radio.db "$get_url")
fi

#if no url was found
if [ ${#url}  -eq 0 ]; then
	if [[ "$1" == "-b" || "$1" == "--backup" ]]; then
		echo "No backup stream found :("
		exit 1
	else
        echo "No station for $1 found :("
        exit 1
	fi
fi

#if string contains newlines therfore multiple urls
if [ $(echo "$url" | wc -l) -gt 1 ]; then
	#select names
	names=$(${path}/sqlite3 ${path}/radio.db "$get_names")
	echo "Multiple possible stations. Please specify!"
	echo "-------------------------------------------"
	echo "$names"
	exit 1;
else
	get_name_for_url='select name from stations where url="'
	get_name_for_url+=$url
	get_name_for_url+='"'
	name=$(${path}/sqlite3 ${path}/radio.db "$get_name_for_url")
	echo "Playing $name"
	echo
	mplayer -quiet $url 2>&1 | sed -nu '/^ICY/ p' | sed 's/StreamUrl\=.*\;//'
fi
exit 0
